{"remainingRequest":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/src/components/elements/inline-svg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/src/components/elements/inline-svg.vue","mtime":1585506188166},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnaW5saW5lLXN2ZycsCiAgICBjb21wb25lbnRzOiB7fSwKICAgIHByb3BzOiB7CiAgICAgICAgc3JjOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHt9LAogICAgbWV0aG9kczogewogICAgICAgIHJlYWRTdmcoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCIhIik7CiAgICAgICAgICAgICQodGhpcy4kcmVmcy5jb250YWluZXIpLmVtcHR5KCk7CiAgICAgICAgICAgICQuZ2V0KHRoaXMuc3JjLCAoZGF0YSkgPT4gewogICAgICAgICAgICAgICAgbGV0IHN2ZyA9ICQoZGF0YSkuZmluZCgnc3ZnJyk7CiAgICAgICAgICAgICAgICAvLyBSZW1vdmUgYW55IGludmFsaWQgWE1MIHRhZ3MgYXMgcGVyIGh0dHA6Ly92YWxpZGF0b3IudzMub3JnCiAgICAgICAgICAgICAgICBzdmcgPSBzdmcucmVtb3ZlQXR0cigneG1sbnM6YScpOwogICAgICAgICAgICAgICAgJCh0aGlzLiRyZWZzLmNvbnRhaW5lcikuYXBwZW5kKHN2Zyk7CgogICAgICAgICAgICB9LCAneG1sJyk7CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5yZWFkU3ZnKCk7CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBzcmMoKXsKICAgICAgICAgICAgdGhpcy5yZWFkU3ZnKCk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["inline-svg.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"inline-svg.vue","sourceRoot":"src/components/elements","sourcesContent":["<script>\n    import $ from 'jquery';\n\n    export default {\n        name: 'inline-svg',\n        components: {},\n        props: {\n            src: {\n                type: String,\n                required: true\n            }\n        },\n        computed: {},\n        methods: {\n            readSvg() {\n                console.log(\"!\");\n                $(this.$refs.container).empty();\n                $.get(this.src, (data) => {\n                    let svg = $(data).find('svg');\n                    // Remove any invalid XML tags as per http://validator.w3.org\n                    svg = svg.removeAttr('xmlns:a');\n                    $(this.$refs.container).append(svg);\n\n                }, 'xml');\n            }\n        },\n        mounted() {\n            this.readSvg();\n        },\n        watch: {\n            src(){\n                this.readSvg();\n            }\n        }\n    }\n</script>\n\n\n<template>\n    <div\n        ref=\"container\"\n        class=\"inline-svg\">\n    </div>\n</template>\n\n\n<style lang=\"scss\">\n    @import '@/styles/variables.scss';\n\n    .inline-svg {\n        display: flex;\n        align-items: center;\n    }\n</style>"]}]}