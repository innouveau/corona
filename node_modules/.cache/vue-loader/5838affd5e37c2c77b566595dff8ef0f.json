{"remainingRequest":"/Users/jeroen/Documents/_work/innouveau/projects/clients/082-air-solid/blob/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeroen/Documents/_work/innouveau/projects/clients/082-air-solid/blob/src/components/blob.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/082-air-solid/blob/src/components/blob.vue","mtime":1583617936193},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/082-air-solid/blob/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/082-air-solid/blob/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBQYXRoIGZyb20gIkAvY2xhc3Nlcy9QYXRoIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdibG9iJywKICAgIGNvbXBvbmVudHM6IHt9LAogICAgcHJvcHM6IHsKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwYXRoOiBudWxsCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgY2VudGVyKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgeDogKDAuNSAqIHRoaXMuZGF0YS53aWR0aCkgLSB0aGlzLnBhdGguY2VudGVyLngsCiAgICAgICAgICAgICAgICB5OiAoMC41ICogdGhpcy5kYXRhLmhlaWdodCkgLSB0aGlzLnBhdGguY2VudGVyLnkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdXBkYXRlKCkgewogICAgICAgICAgICB0aGlzLnVwZGF0ZVBvaW50cygpOwogICAgICAgIH0sCiAgICAgICAgdXBkYXRlUG9pbnRzKCkgewogICAgICAgICAgICB0aGlzLnBhdGggPSBuZXcgUGF0aCh0aGlzLmRhdGEpOwogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCl7CiAgICAgICAgdGhpcy51cGRhdGUoKTsKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgZGVlcDogdHJ1ZSwKICAgICAgICAgICAgaGFuZGxlcigpIHsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["blob.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"blob.vue","sourceRoot":"src/components","sourcesContent":["<script>\n    import Path from \"@/classes/Path\";\n\n    export default {\n        name: 'blob',\n        components: {},\n        props: {\n            data: {\n                type: Object,\n                required: true\n            }\n        },\n        data() {\n            return {\n                path: null\n            }\n        },\n        computed: {\n            center() {\n                return {\n                    x: (0.5 * this.data.width) - this.path.center.x,\n                    y: (0.5 * this.data.height) - this.path.center.y\n                }\n            }\n        },\n        methods: {\n            update() {\n                this.updatePoints();\n            },\n            updatePoints() {\n                this.path = new Path(this.data);\n            }\n        },\n        mounted(){\n            this.update();\n        },\n        watch: {\n            data: {\n                deep: true,\n                handler() {\n                    this.update();\n                }\n            }\n        }\n    }\n</script>\n\n\n<template>\n    <div class=\"blob\">\n        <svg\n            v-if=\"path\"\n            :width=\"data.width\"\n            :height=\"data.height\">\n            <g :transform=\"'translate(' + center.x + ',' + center.y + ')'\">\n                <path\n                        :d=\"path.d\"\n                        fill=\"rgba(255, 180, 188, 1)\"\n                        stroke=\"none\"\n                        stroke-width=\"0\"/>\n                <g\n                        v-for=\"(point, index) in path.points\"\n                        :transform=\"'translate(' + point.x + ',' + point.y + ')'\">\n                    <text>\n                        {{index}}\n                    </text>\n                    <circle\n                            r=\"2\"\n                            class=\"circle__base\"/>\n                    <circle\n                            r=\"2\"\n                            :cx=\"point.p1.x - point.x\"\n                            :cy=\"point.p1.y - point.y\"/>\n                    <circle\n                            r=\"2\"\n                            :cx=\"point.p2.x - point.x\"\n                            :cy=\"point.p2.y - point.y\"/>\n                </g>\n            </g>\n        </svg>\n    </div>\n</template>\n\n\n<style lang=\"scss\">\n    @import '@/styles/variables.scss';\n\n    .blob {\n\n        svg {\n            background: #ddd;\n\n            circle {\n                fill: red;\n\n                &.circle__base {\n                    fill: #000;\n                }\n            }\n        }\n    }\n</style>"]}]}