{"remainingRequest":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/src/components/graph/graph-fatalities.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/src/components/graph/graph-fatalities.vue","mtime":1585433850699},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/innouveau/corona/dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnQC9zdHlsZXMvdmFyaWFibGVzLnNjc3MnOwoKLmdyYXBoLWZhdGFsaXRpZXMgewoKfQo="},{"version":3,"sources":["graph-fatalities.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;AAEA;;AAEA","file":"graph-fatalities.vue","sourceRoot":"src/components/graph","sourcesContent":["<script>\n    export default {\n        name: 'graph-fatalities',\n        components: {},\n        props: {},\n        computed: {\n            countries() {\n                return this.$store.state.countries.all.filter(c => c.active);\n            },\n            mapping() {\n                return this.$store.state.mapping.fatalities;\n            },\n            data() {\n                return this.countries.map(c => {\n                    let country = {...c};\n                    country.dataPoints = [];\n                    for (let entry of country.entries) {\n                        if (entry.fatalities > this.mapping) {\n                            let e = {...entry};\n                            e.index = country.dataPoints.length + 1;\n                            country.dataPoints.push(e);\n                        }\n                    }\n                    delete country.entries;\n                    return country;\n                });\n            }\n        },\n        methods: {}\n    }\n</script>\n\n\n<template>\n    <div class=\"graph-fatalities\">\n        {{mapping}}\n        {{data}}\n    </div>\n</template>\n\n\n<style lang=\"scss\">\n    @import '@/styles/variables.scss';\n\n    .graph-fatalities {\n\n    }\n</style>"]}]}